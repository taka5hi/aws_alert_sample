# This is a basic workflow to help you get started with Actions

name: deploy

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  IMAGE_REPOSITORY: 634671122973.dkr.ecr.ap-northeast-1.amazonaws.com
  IMAGE_NAME: ecr-for-test
  IMAGE_TAG: ${{ github.sha }}
  # IMAGE_TAG: 3961072817e8972946e5e9722ed3c9467b58f659

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Setup Credentials for AWS
      # https://github.com/marketplace/actions/configure-aws-credentials-action-for-github-actions
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login and Push image to ECR
      # https://github.com/marketplace/actions/amazon-ecr-login-action-for-github-actions
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-push-image
        env:
          ECR_REGISTRY: ${{ env.IMAGE_REPOSITORY }}
          ECR_REPOSITORY: ${{ env.IMAGE_NAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./lambda/publish-to-sns
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # deploy CloudFormation stack
      # https://github.com/marketplace/actions/aws-cloudformation-deploy-cloudformation-stack-action-for-github-actions
      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: test
          template: cfn/alert.yml
          parameter-overrides: "ImageTag=${{ env.IMAGE_TAG }}"
          capabilities: "CAPABILITY_NAMED_IAM"
